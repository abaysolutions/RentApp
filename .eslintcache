[{"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\index.tsx":"1","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\App.tsx":"3","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\Form\\index.ts":"4","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\Form\\PropertyForm.tsx":"5","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\utils\\requests.ts":"6","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\ImageDrop\\index.ts":"7","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\ImageDrop\\ImageDrop.tsx":"8","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\utils\\imageConverter.ts":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":229,"mtime":1614546794644,"results":"13","hashOfConfig":"11"},{"size":30,"mtime":1610923395948,"results":"14","hashOfConfig":"11"},{"size":4607,"mtime":1614553984550,"results":"15","hashOfConfig":"11"},{"size":1453,"mtime":1614548521933,"results":"16","hashOfConfig":"11"},{"size":30,"mtime":1611080277500,"results":"17","hashOfConfig":"11"},{"size":2346,"mtime":1611583363794,"results":"18","hashOfConfig":"11"},{"size":527,"mtime":1613339025190,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"f2593y",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\index.tsx",[],["41","42"],"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\App.tsx",[],"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\Form\\index.ts",[],"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\Form\\PropertyForm.tsx",["43"],"import React from \"react\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { FormFields, PreparedForm } from \"../../Types/FormTypes\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  Grid,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { sendRegistrationForm, uploadFile } from \"../../utils/requests\";\r\nimport { ImageDrop } from \"../ImageDrop\";\r\nimport { convertImagesToFileNameArray } from \"../../utils/imageConverter\";\r\n\r\nconst initialValues: FormFields = {\r\n  fullName: \"\",\r\n  address: \"\",\r\n  email: \"\",\r\n  phoneNumber: \"\",\r\n  price: 0,\r\n  rooms: 1,\r\n  description: \"\",\r\n  imageFiles: [],\r\n};\r\n\r\nconst PropertyForm = () => {\r\n  return (\r\n    <div style={{ padding: 16, margin: \"auto\", maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        Add Property\r\n      </Typography>\r\n      <Typography paragraph>\r\n        {\" \"}\r\n        Please Fill out this form to add your rental advertisement.{\" \"}\r\n      </Typography>\r\n      <Paper elevation={3} style={{ padding: 48 }}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={(formData) => {\r\n            let fileCount = 0;\r\n            console.log(\"Pre formatted\", formData);\r\n            formData.imageFiles.forEach((image) => {\r\n              uploadFile(formData.phoneNumber + \"_\" + ++fileCount, image);\r\n            });\r\n            const preparedForm: PreparedForm = {\r\n              ...formData,\r\n              imageFiles: fileCount,\r\n            };\r\n            console.log(\"Formatted Form\", preparedForm);\r\n            sendRegistrationForm(JSON.stringify(preparedForm));\r\n            window.location.reload();\r\n          }}\r\n        >\r\n          {({ values, handleSubmit, isSubmitting, setFieldValue }) => (\r\n            <Form>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"fullName\"\r\n                    as={TextField}\r\n                    label=\"Full Name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"address\"\r\n                    as={TextField}\r\n                    label=\"Address\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field fullWidth name=\"email\" as={TextField} label=\"Email\" />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    name=\"phoneNumber\"\r\n                    fullWidth\r\n                    as={TextField}\r\n                    label=\"Phone Number\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"price\"\r\n                    type=\"number\"\r\n                    as={TextField}\r\n                    label=\"price\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"rooms\"\r\n                    label=\"Rooms\"\r\n                    type=\"number\"\r\n                    as={TextField}\r\n                    select\r\n                  >\r\n                    <MenuItem value={1}>1</MenuItem>\r\n                    <MenuItem value={2}>2</MenuItem>\r\n                    <MenuItem value={3}>3</MenuItem>\r\n                    <MenuItem value={4}>4</MenuItem>\r\n                  </Field>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    as={TextField}\r\n                    multiline\r\n                    rows={6}\r\n                    rowsMax={10}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <ImageDrop values={values} setFieldValue={setFieldValue} />\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 24 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { PropertyForm };\r\n","C:\\Users\\yared\\Desktop\\Abay\\client\\src\\utils\\requests.ts",[],"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\ImageDrop\\index.ts",[],"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\Components\\ImageDrop\\ImageDrop.tsx",[],"C:\\Users\\yared\\Desktop\\Abay\\client\\src\\utils\\imageConverter.ts",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":15,"column":10,"nodeType":"52","messageId":"53","endLine":15,"endColumn":38},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'convertImagesToFileNameArray' is defined but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]